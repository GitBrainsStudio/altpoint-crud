// <auto-generated />
using System;
using ALTPOINT_CRUD.Infrastructure.EntityFramework.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ALTPOINT_CRUD.Infrastructure.EntityFramework.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.6");

            modelBuilder.Entity("ALTPOINT_CRUD.Domain.Entities.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Apartment")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("House")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Region")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ZipCode")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("ALTPOINT_CRUD.Domain.Entities.Child", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Dob")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Patronymic")
                        .HasColumnType("TEXT");

                    b.Property<string>("SurName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Child");
                });

            modelBuilder.Entity("ALTPOINT_CRUD.Domain.Entities.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("CurWorkExp")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("LivingAddressId")
                        .HasColumnType("TEXT");

                    b.Property<int>("MonExpenses")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MonIncome")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Patronymic")
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .HasColumnType("TEXT");

                    b.Property<int>("TypeEducation")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LivingAddressId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("ALTPOINT_CRUD.Domain.Entities.Communication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Communication");
                });

            modelBuilder.Entity("ALTPOINT_CRUD.Domain.Entities.Job", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateDismissal")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateEmp")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("FactAddressId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("JurAddressId")
                        .HasColumnType("TEXT");

                    b.Property<int>("MonIncomde")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("TIN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("FactAddressId");

                    b.HasIndex("JurAddressId");

                    b.ToTable("Job");
                });

            modelBuilder.Entity("ALTPOINT_CRUD.Domain.Entities.Passport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Giver")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Series")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Passport");
                });

            modelBuilder.Entity("ALTPOINT_CRUD.Domain.Entities.Child", b =>
                {
                    b.HasOne("ALTPOINT_CRUD.Domain.Entities.Client", null)
                        .WithMany("Children")
                        .HasForeignKey("ClientId");
                });

            modelBuilder.Entity("ALTPOINT_CRUD.Domain.Entities.Client", b =>
                {
                    b.HasOne("ALTPOINT_CRUD.Domain.Entities.Address", "LivingAddress")
                        .WithMany()
                        .HasForeignKey("LivingAddressId");

                    b.Navigation("LivingAddress");
                });

            modelBuilder.Entity("ALTPOINT_CRUD.Domain.Entities.Communication", b =>
                {
                    b.HasOne("ALTPOINT_CRUD.Domain.Entities.Client", null)
                        .WithMany("Communications")
                        .HasForeignKey("ClientId");
                });

            modelBuilder.Entity("ALTPOINT_CRUD.Domain.Entities.Job", b =>
                {
                    b.HasOne("ALTPOINT_CRUD.Domain.Entities.Client", null)
                        .WithMany("Jobs")
                        .HasForeignKey("ClientId");

                    b.HasOne("ALTPOINT_CRUD.Domain.Entities.Address", "FactAddress")
                        .WithMany()
                        .HasForeignKey("FactAddressId");

                    b.HasOne("ALTPOINT_CRUD.Domain.Entities.Address", "JurAddress")
                        .WithMany()
                        .HasForeignKey("JurAddressId");

                    b.Navigation("FactAddress");

                    b.Navigation("JurAddress");
                });

            modelBuilder.Entity("ALTPOINT_CRUD.Domain.Entities.Passport", b =>
                {
                    b.HasOne("ALTPOINT_CRUD.Domain.Entities.Client", null)
                        .WithMany("Passport")
                        .HasForeignKey("ClientId");
                });

            modelBuilder.Entity("ALTPOINT_CRUD.Domain.Entities.Client", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Communications");

                    b.Navigation("Jobs");

                    b.Navigation("Passport");
                });
#pragma warning restore 612, 618
        }
    }
}
